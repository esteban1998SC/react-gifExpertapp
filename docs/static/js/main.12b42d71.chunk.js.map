{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","console","log","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAbW,SAACC,GAEpBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC1BC,QAAQC,IAAI,iBACbV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAqBS,OACvCR,EAAc,MAKjB,SAEI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAtBc,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcbM,GAda,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCFJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAyBtC,OAlBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAIZ,CAACpB,IAEGqB,EDrB0BM,CAAc3B,GAAlCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAarB,OACI,qCACI,6BAAMpB,IACJoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEaH,EAAOJ,KAAK,SAACC,GAAD,OACT,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,aEUpCiB,EAjCM,WAAM,MAIa5C,mBAAS,CAAC,gBAJvB,mBAIhB6C,EAJgB,KAIJC,EAJI,KAcvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAa/C,cAAgB+C,IAC7B,uBAEA,6BAEQD,EAAWpB,KAAK,SAACT,GAAD,OACX,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MCxBlC+B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.12b42d71.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      //  e.preventDefault();\r\n      e.preventDefault();\r\n       //console.log(props.setCategories);\r\n\r\n       if (inputValue.trim().length > 2) {\r\n            console.log('Submit hechoS');\r\n           setCategories(cats => [inputValue , ...cats]);\r\n           setinputValue('');\r\n       }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            {/* <h2>Add Category</h2> */}\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=LoekGW0zIMsmkRFFC67VN1tvSp8HpYJc`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } ></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images ,loading } = useFetchGifs( category );\r\n    //console.log(state);\r\n    // const [images, setimages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs( category )\r\n    //         .then( imgs => setimages( imgs ) );\r\n    // },[ category ])\r\n\r\n    \r\n    // getGifs();\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            { loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                    {\r\n                         images.map( (img) =>(\r\n                            <GifGridItem key={ img.id } { ...img } />\r\n                        ))   \r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=> {\r\n\r\n        getGifs( category )\r\n            .then( imgs=> {\r\n\r\n                setTimeout(() => {\r\n                    \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n                }, 3000);\r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n\r\n    const [categories, setcategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = () => {\r\n    //    // categorias.push('Hunter x Hunter');\r\n    //     //setcategories([...categories, 'HunterXHunter']);\r\n    //     setcategories( cats => [...cats, 'HunterXHunter'])\r\n    // }\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategory setCategories={ setcategories } />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) =>(\r\n                         <GifGrid \r\n                            key={ category }\r\n                            category={ category } />\r\n                    ))   \r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}